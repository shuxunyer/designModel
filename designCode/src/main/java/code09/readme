基于接口而非实现编程，可以理解为编程语言中的接口或实现类，这条原则的另一个表述就是基于抽象而非实现编程。

应用这条原则可以将接口和实现分离，封装不稳定的实现，暴露稳定的接口，上游系统面向接口而非实现编程，
不依赖不稳定的实现细节，这样当需求发生变化时，上游系统的代码基本不需要做改动，以此来降低耦合性，提高扩展性。
越顶层抽象、越脱离具体某一实现的设计，越能提高代码的灵活性，应对未来的需求变化，，

实战案例
假设本系统有需要设计图片处理和存储的业务逻辑，图片被处理之后上传到阿里云上。

