IOC inversion of controller
注：不能等同于spring的IOC
控制反转：
控制指的是对程序执行流程的控制
反转指的是在没有使用框架之前，程序员自己控制整个程序的执行，在使用框架之后，整个程序的执行流程
可以通过框架来控制。流程的控制权从程序员"反转"到框架。

p01 通过模板模式/框架来实现控制反转
p02 通过依赖注入来实现控制反转
所以控制反转并不是一种具体的实现技巧，而是一种比较笼统的设计思想。
依赖注入是一种实现技巧、编码技巧

DI Dependency Injection 依赖注入
不通过new()的方式在类内部创建依赖对象，而是将依赖的类对象在外部创建好之后，通过
构造函数、函数参数的方式传递(注入)给类使用

DIP Dependency Inversion Principle  依赖反转原则、依赖倒置原则
详见专栏内容与示例说明



